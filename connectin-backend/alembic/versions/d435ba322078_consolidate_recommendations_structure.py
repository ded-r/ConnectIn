"""consolidate recommendations structure

Revision ID: d435ba322078
Revises: fcfe56a6a2c6
Create Date: 2025-04-15 21:46:59.608758

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'd435ba322078'
down_revision: Union[str, None] = 'fcfe56a6a2c6'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_project_recommendations_to_user_id', table_name='project_recommendations')
    op.drop_table('project_recommendations')
    op.drop_index('ix_post_recommendations_to_user_id', table_name='post_recommendations')
    op.drop_table('post_recommendations')
    op.drop_index('ix_team_recommendations_to_user_id', table_name='team_recommendations')
    op.drop_table('team_recommendations')
    op.add_column('recommendations', sa.Column('to_user_id', sa.Integer(), nullable=True))
    op.add_column('recommendations', sa.Column('project_id', sa.Integer(), nullable=True))
    op.add_column('recommendations', sa.Column('team_id', sa.Integer(), nullable=True))
    op.add_column('recommendations', sa.Column('post_id', sa.Integer(), nullable=True))
    op.add_column('recommendations', sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True))
    op.alter_column('recommendations', 'from_user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('recommendations', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.create_index(op.f('ix_recommendations_from_user_id'), 'recommendations', ['from_user_id'], unique=False)
    op.create_index(op.f('ix_recommendations_post_id'), 'recommendations', ['post_id'], unique=False)
    op.create_index(op.f('ix_recommendations_project_id'), 'recommendations', ['project_id'], unique=False)
    op.create_index(op.f('ix_recommendations_recommendation_type'), 'recommendations', ['recommendation_type'], unique=False)
    op.create_index(op.f('ix_recommendations_score'), 'recommendations', ['score'], unique=False)
    op.create_index(op.f('ix_recommendations_team_id'), 'recommendations', ['team_id'], unique=False)
    op.create_index(op.f('ix_recommendations_to_user_id'), 'recommendations', ['to_user_id'], unique=False)
    op.create_index('uq_recommendation_target', 'recommendations', ['recommendation_type', 'to_user_id', 'project_id', 'team_id', 'post_id'], unique=True)
    op.drop_constraint('recommendations_from_user_id_fkey', 'recommendations', type_='foreignkey')
    op.create_foreign_key('fk_recommendation_post', 'recommendations', 'posts', ['post_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('fk_recommendation_team', 'recommendations', 'teams', ['team_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('fk_recommendation_to_user', 'recommendations', 'users', ['to_user_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('fk_recommendation_project', 'recommendations', 'projects', ['project_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('fk_recommendation_from_user', 'recommendations', 'users', ['from_user_id'], ['id'], ondelete='SET NULL')
    op.alter_column('teams', 'leader_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_constraint('fk_teams_leader_id_users', 'teams', type_='foreignkey')
    op.create_foreign_key(None, 'teams', 'users', ['leader_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'teams', type_='foreignkey')
    op.create_foreign_key('fk_teams_leader_id_users', 'teams', 'users', ['leader_id'], ['id'], ondelete='SET NULL')
    op.alter_column('teams', 'leader_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_constraint('fk_recommendation_from_user', 'recommendations', type_='foreignkey')
    op.drop_constraint('fk_recommendation_project', 'recommendations', type_='foreignkey')
    op.drop_constraint('fk_recommendation_to_user', 'recommendations', type_='foreignkey')
    op.drop_constraint('fk_recommendation_team', 'recommendations', type_='foreignkey')
    op.drop_constraint('fk_recommendation_post', 'recommendations', type_='foreignkey')
    op.create_foreign_key('recommendations_from_user_id_fkey', 'recommendations', 'users', ['from_user_id'], ['id'], ondelete='CASCADE')
    op.drop_index('uq_recommendation_target', table_name='recommendations')
    op.drop_index(op.f('ix_recommendations_to_user_id'), table_name='recommendations')
    op.drop_index(op.f('ix_recommendations_team_id'), table_name='recommendations')
    op.drop_index(op.f('ix_recommendations_score'), table_name='recommendations')
    op.drop_index(op.f('ix_recommendations_recommendation_type'), table_name='recommendations')
    op.drop_index(op.f('ix_recommendations_project_id'), table_name='recommendations')
    op.drop_index(op.f('ix_recommendations_post_id'), table_name='recommendations')
    op.drop_index(op.f('ix_recommendations_from_user_id'), table_name='recommendations')
    op.alter_column('recommendations', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('recommendations', 'from_user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_column('recommendations', 'updated_at')
    op.drop_column('recommendations', 'post_id')
    op.drop_column('recommendations', 'team_id')
    op.drop_column('recommendations', 'project_id')
    op.drop_column('recommendations', 'to_user_id')
    op.create_table('team_recommendations',
    sa.Column('recommendation_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('to_team_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('to_user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['recommendation_id'], ['recommendations.id'], name='team_recommendations_recommendation_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['to_team_id'], ['teams.id'], name='team_recommendations_to_team_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['to_user_id'], ['users.id'], name='fk_team_recommendations_to_user_id_users', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('recommendation_id', name='team_recommendations_pkey')
    )
    op.create_index('ix_team_recommendations_to_user_id', 'team_recommendations', ['to_user_id'], unique=False)
    op.create_table('post_recommendations',
    sa.Column('recommendation_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('to_post_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('to_user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['recommendation_id'], ['recommendations.id'], name='post_recommendations_recommendation_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['to_post_id'], ['posts.id'], name='post_recommendations_to_post_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['to_user_id'], ['users.id'], name='fk_post_recommendations_to_user_id_users', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('recommendation_id', name='post_recommendations_pkey')
    )
    op.create_index('ix_post_recommendations_to_user_id', 'post_recommendations', ['to_user_id'], unique=False)
    op.create_table('project_recommendations',
    sa.Column('recommendation_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('to_project_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('to_user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['recommendation_id'], ['recommendations.id'], name='project_recommendations_recommendation_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['to_project_id'], ['projects.id'], name='project_recommendations_to_project_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['to_user_id'], ['users.id'], name='fk_project_recommendations_to_user_id_users', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('recommendation_id', name='project_recommendations_pkey')
    )
    op.create_index('ix_project_recommendations_to_user_id', 'project_recommendations', ['to_user_id'], unique=False)
    # ### end Alembic commands ###
