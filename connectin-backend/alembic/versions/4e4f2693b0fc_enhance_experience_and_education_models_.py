# connectin-backend/alembic/versions/4e4f2693b0fc_....py

from typing import Sequence, Union
from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision: str = '4e4f2693b0fc'
down_revision: Union[str, None] = '4e7060b3ac97'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

def upgrade() -> None:
    # ### commands auto generated by Alembic - START ###

    # --- Education Table ---
    # Добавляем новые колонки (nullable=True для совместимости с существующими данными)
    op.add_column('education', sa.Column('field_of_study', sa.String(length=255), nullable=True)) # Сделали nullable=True
    op.add_column('education', sa.Column('relevant_courses', sa.Text(), nullable=True))
    op.add_column('education', sa.Column('description', sa.Text(), nullable=True)) # Добавляем description сюда тоже

    # Изменяем тип колонок с Integer на Date, указывая правило конвертации USING
    op.alter_column('education', 'start_year',
               existing_type=sa.INTEGER(),
               type_=sa.Date(),
               existing_nullable=False,
               # ---> ИСПРАВЛЕНО: Добавляем USING для PostgreSQL <---
               postgresql_using='make_date(start_year, 1, 1)') # Преобразуем год в ГГГГ-01-01

    op.alter_column('education', 'end_year',
               existing_type=sa.INTEGER(),
               type_=sa.Date(),
               existing_nullable=True,
               # ---> ИСПРАВЛЕНО: Добавляем USING для PostgreSQL <---
               postgresql_using='make_date(end_year, 1, 1)') # make_date корректно обработает NULL

    # --- Experience Table ---
    # Добавляем новые колонки
    op.add_column('experience', sa.Column('description', sa.Text(), nullable=True))

    # Изменяем тип колонок с Integer на Date, указывая правило конвертации USING
    op.alter_column('experience', 'start_year',
                    existing_type=sa.INTEGER(),
                    type_=sa.Date(),
                    existing_nullable=False,
                    # ---> ИСПРАВЛЕНО: Добавляем USING для PostgreSQL <---
                    postgresql_using='make_date(start_year, 1, 1)')

    op.alter_column('experience', 'end_year',
                    existing_type=sa.INTEGER(),
                    type_=sa.Date(),
                    existing_nullable=True,
                    # ---> ИСПРАВЛЕНО: Добавляем USING для PostgreSQL <---
                    postgresql_using='make_date(end_year, 1, 1)')

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - START ###

    # --- Experience Table ---
    # Изменяем тип обратно на Integer, извлекая год из даты
    op.alter_column('experience', 'end_year',
               existing_type=sa.Date(),
               type_=sa.INTEGER(),
               existing_nullable=True,
               # ---> ИСПРАВЛЕНО: Добавляем USING для PostgreSQL <---
               postgresql_using='EXTRACT(YEAR FROM end_year)::integer')

    op.alter_column('experience', 'start_year',
               existing_type=sa.Date(),
               type_=sa.INTEGER(),
               existing_nullable=False,
                # ---> ИСПРАВЛЕНО: Добавляем USING для PostgreSQL <---
               postgresql_using='EXTRACT(YEAR FROM start_year)::integer')

    # Удаляем колонки
    op.drop_column('experience', 'description')


    # --- Education Table ---
    # Изменяем тип обратно на Integer, извлекая год из даты
    op.alter_column('education', 'end_year',
               existing_type=sa.Date(),
               type_=sa.INTEGER(),
               existing_nullable=True,
               # ---> ИСПРАВЛЕНО: Добавляем USING для PostgreSQL <---
               postgresql_using='EXTRACT(YEAR FROM end_year)::integer')

    op.alter_column('education', 'start_year',
               existing_type=sa.Date(),
               type_=sa.INTEGER(),
               existing_nullable=False,
                # ---> ИСПРАВЛЕНО: Добавляем USING для PostgreSQL <---
               postgresql_using='EXTRACT(YEAR FROM start_year)::integer')

    # Удаляем колонки
    op.drop_column('education', 'relevant_courses')
    op.drop_column('education', 'field_of_study')
    op.drop_column('education', 'description') # Удаляем description, если добавляли

    # ### end Alembic commands ###