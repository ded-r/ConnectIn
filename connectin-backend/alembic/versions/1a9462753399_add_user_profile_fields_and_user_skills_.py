"""Add user profile fields and user_skills table

Revision ID: 1a9462753399
Revises: a09ec142d05e
Create Date: 2025-02-03 15:24:56.424888

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '1a9462753399'
down_revision: Union[str, None] = 'a09ec142d05e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user_skills',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('skill_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['skill_id'], ['skills.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'skill_id')
    )
    op.drop_index('idx_articles_search', table_name='articles', postgresql_using='gin')
    op.drop_column('articles', 'search_vector')
    op.drop_index('idx_comments_article', table_name='comments')
    op.drop_index('idx_project_members', table_name='project_members')
    op.drop_index('idx_projects_owner', table_name='projects')
    op.alter_column('requests', 'status',
               existing_type=postgresql.ENUM('pending', 'accepted', 'rejected', name='request_status'),
               type_=sa.String(),
               existing_nullable=True)
    op.add_column('users', sa.Column('first_name', sa.String(length=50), nullable=True))
    op.add_column('users', sa.Column('last_name', sa.String(length=50), nullable=True))
    op.add_column('users', sa.Column('city', sa.String(length=100), nullable=True))
    op.add_column('users', sa.Column('position', sa.String(length=100), nullable=True))
    op.add_column('users', sa.Column('github', sa.String(length=255), nullable=True))
    op.add_column('users', sa.Column('linkedin', sa.String(length=255), nullable=True))
    op.add_column('users', sa.Column('telegram', sa.String(length=255), nullable=True))
    op.drop_index('idx_users_email', table_name='users')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_index('idx_users_email', 'users', ['email'], unique=False)
    op.drop_column('users', 'telegram')
    op.drop_column('users', 'linkedin')
    op.drop_column('users', 'github')
    op.drop_column('users', 'position')
    op.drop_column('users', 'city')
    op.drop_column('users', 'last_name')
    op.drop_column('users', 'first_name')
    op.alter_column('requests', 'status',
               existing_type=sa.String(),
               type_=postgresql.ENUM('pending', 'accepted', 'rejected', name='request_status'),
               existing_nullable=True)
    op.create_index('idx_projects_owner', 'projects', ['owner_id'], unique=False)
    op.create_index('idx_project_members', 'project_members', ['project_id', 'user_id'], unique=False)
    op.create_index('idx_comments_article', 'comments', ['article_id'], unique=False)
    op.add_column('articles', sa.Column('search_vector', postgresql.TSVECTOR(), autoincrement=False, nullable=True))
    op.create_index('idx_articles_search', 'articles', ['search_vector'], unique=False, postgresql_using='gin')
    op.drop_table('user_skills')
    # ### end Alembic commands ###
