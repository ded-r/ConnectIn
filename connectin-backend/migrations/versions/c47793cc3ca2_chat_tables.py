"""Chat tables

Revision ID: c47793cc3ca2
Revises: 0008167acded
Create Date: 2025-02-21 16:26:31.715139

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'c47793cc3ca2'
down_revision: Union[str, None] = '0008167acded'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('post_skills')
    op.drop_constraint('post_tags_post_id_fkey', 'post_tags', type_='foreignkey')
    op.drop_constraint('post_tags_tag_id_fkey', 'post_tags', type_='foreignkey')
    op.create_foreign_key(None, 'post_tags', 'tags', ['tag_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'post_tags', 'posts', ['post_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('project_applications_project_id_fkey', 'project_applications', type_='foreignkey')
    op.drop_constraint('project_applications_user_id_fkey', 'project_applications', type_='foreignkey')
    op.create_foreign_key(None, 'project_applications', 'projects', ['project_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'project_applications', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('project_members_project_id_fkey', 'project_members', type_='foreignkey')
    op.drop_constraint('project_members_user_id_fkey', 'project_members', type_='foreignkey')
    op.create_foreign_key(None, 'project_members', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'project_members', 'projects', ['project_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('project_skills_project_id_fkey', 'project_skills', type_='foreignkey')
    op.drop_constraint('project_skills_skill_id_fkey', 'project_skills', type_='foreignkey')
    op.create_foreign_key(None, 'project_skills', 'projects', ['project_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'project_skills', 'skills', ['skill_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('project_tags_tag_id_fkey', 'project_tags', type_='foreignkey')
    op.drop_constraint('project_tags_project_id_fkey', 'project_tags', type_='foreignkey')
    op.create_foreign_key(None, 'project_tags', 'projects', ['project_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'project_tags', 'tags', ['tag_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('projects_owner_id_fkey', 'projects', type_='foreignkey')
    op.create_foreign_key(None, 'projects', 'users', ['owner_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('user_skills_skill_id_fkey', 'user_skills', type_='foreignkey')
    op.drop_constraint('user_skills_user_id_fkey', 'user_skills', type_='foreignkey')
    op.create_foreign_key(None, 'user_skills', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'user_skills', 'skills', ['skill_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('user_teams_user_id_fkey', 'user_teams', type_='foreignkey')
    op.drop_constraint('user_teams_team_id_fkey', 'user_teams', type_='foreignkey')
    op.create_foreign_key(None, 'user_teams', 'teams', ['team_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'user_teams', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'user_teams', type_='foreignkey')
    op.drop_constraint(None, 'user_teams', type_='foreignkey')
    op.create_foreign_key('user_teams_team_id_fkey', 'user_teams', 'teams', ['team_id'], ['id'])
    op.create_foreign_key('user_teams_user_id_fkey', 'user_teams', 'users', ['user_id'], ['id'])
    op.drop_constraint(None, 'user_skills', type_='foreignkey')
    op.drop_constraint(None, 'user_skills', type_='foreignkey')
    op.create_foreign_key('user_skills_user_id_fkey', 'user_skills', 'users', ['user_id'], ['id'])
    op.create_foreign_key('user_skills_skill_id_fkey', 'user_skills', 'skills', ['skill_id'], ['id'])
    op.drop_constraint(None, 'projects', type_='foreignkey')
    op.create_foreign_key('projects_owner_id_fkey', 'projects', 'users', ['owner_id'], ['id'])
    op.drop_constraint(None, 'project_tags', type_='foreignkey')
    op.drop_constraint(None, 'project_tags', type_='foreignkey')
    op.create_foreign_key('project_tags_project_id_fkey', 'project_tags', 'projects', ['project_id'], ['id'])
    op.create_foreign_key('project_tags_tag_id_fkey', 'project_tags', 'tags', ['tag_id'], ['id'])
    op.drop_constraint(None, 'project_skills', type_='foreignkey')
    op.drop_constraint(None, 'project_skills', type_='foreignkey')
    op.create_foreign_key('project_skills_skill_id_fkey', 'project_skills', 'skills', ['skill_id'], ['id'])
    op.create_foreign_key('project_skills_project_id_fkey', 'project_skills', 'projects', ['project_id'], ['id'])
    op.drop_constraint(None, 'project_members', type_='foreignkey')
    op.drop_constraint(None, 'project_members', type_='foreignkey')
    op.create_foreign_key('project_members_user_id_fkey', 'project_members', 'users', ['user_id'], ['id'])
    op.create_foreign_key('project_members_project_id_fkey', 'project_members', 'projects', ['project_id'], ['id'])
    op.drop_constraint(None, 'project_applications', type_='foreignkey')
    op.drop_constraint(None, 'project_applications', type_='foreignkey')
    op.create_foreign_key('project_applications_user_id_fkey', 'project_applications', 'users', ['user_id'], ['id'])
    op.create_foreign_key('project_applications_project_id_fkey', 'project_applications', 'projects', ['project_id'], ['id'])
    op.drop_constraint(None, 'post_tags', type_='foreignkey')
    op.drop_constraint(None, 'post_tags', type_='foreignkey')
    op.create_foreign_key('post_tags_tag_id_fkey', 'post_tags', 'tags', ['tag_id'], ['id'])
    op.create_foreign_key('post_tags_post_id_fkey', 'post_tags', 'posts', ['post_id'], ['id'])
    op.create_table('post_skills',
    sa.Column('post_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('skill_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['post_id'], ['posts.id'], name='post_skills_post_id_fkey'),
    sa.ForeignKeyConstraint(['skill_id'], ['skills.id'], name='post_skills_skill_id_fkey'),
    sa.PrimaryKeyConstraint('post_id', 'skill_id', name='post_skills_pkey')
    )
    # ### end Alembic commands ###
